generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            String         @id @default(cuid())
  username      String         @unique
  password      String
  email         String         @unique
  role          String         // "admin", "author", or "reader"
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  posts         Posts[]
  comments      Comments[]
  replies       Replies[]
  passwordReset PasswordReset?
}

model Posts {
  id        String     @id @default(cuid())
  title     String     @unique
  content   String
  authorId  String
  author    Users      @relation(fields: [authorId], references: [id])
  status    String     @default("draft") //"draft" or "published"
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  comments  Comments[]
}

model Comments {
  id        String   @id @default(cuid())
  content   String
  postId    String
  post      Posts    @relation(fields: [postId], references: [id])
  userId    String
  user      Users    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  replies   Replies[]
}
model Replies {
  id        String @id @default(cuid())
  content   String 
  commentId String 
  comment   Comments @relation(fields: [commentId], references : [id])
  userId    String
  user      Users    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model PasswordReset {
  id        String   @id @default(uuid())
  userId    String   @unique
  resetCode String
  expiresAt DateTime
  user      Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
}
